// Copyright 2014 zisync.com

#ifndef ZISYNC_KERNEL_UTILS_REQUEST_H_
#define ZISYNC_KERNEL_UTILS_REQUEST_H_

#include <memory>
#include <string>

#ifdef _MSC_VER
  #pragma warning( push )
  #pragma warning( disable : 4244)
  #pragma warning( disable : 4267)
  #include <google/protobuf/message.h>
  #include "zisync/kernel/proto/kernel.pb.h"
  #pragma warning( pop )
#else
  #include <google/protobuf/message.h>
  #include "zisync/kernel/proto/kernel.pb.h"
#endif

#include "zisync/kernel/utils/message.h"
#include "zisync_kernel.h"  // NOLINT
#include "zisync/kernel/utils/response.h"

namespace zs {

using std::string;

class ZmqMsg;
class ZmqSocket;

class Request : public Message {
 public:
  Request() {}
  virtual ~Request() {}
  virtual ::google::protobuf::Message* mutable_msg() = 0;
  virtual MsgCode msg_code() const = 0;
};

/* Generated by shell script */
class FindRequest : public Request {
 public:
  FindRequest() {}
  virtual ~FindRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgFindRequest* mutable_request() { return &request_msg_; }
  const MsgFindRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_FIND_REQUEST; }
 private:
  FindRequest(FindRequest&);
  void operator=(FindRequest&);

  MsgFindRequest  request_msg_;
};

class DeviceInfoRequest : public Request {
 public:
  DeviceInfoRequest() {}
  virtual ~DeviceInfoRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgDeviceInfoRequest* mutable_request() { return &request_msg_; }
  const MsgDeviceInfoRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_DEVICE_INFO_REQUEST; }
 private:
  DeviceInfoRequest(DeviceInfoRequest&);
  void operator=(DeviceInfoRequest&);

  MsgDeviceInfoRequest  request_msg_;
};

class PushDeviceInfoRequest : public Request {
 public:
  PushDeviceInfoRequest() {}
  virtual ~PushDeviceInfoRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgPushDeviceInfoRequest* mutable_request() { return &request_msg_; }
  const MsgPushDeviceInfoRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_PUSH_DEVICE_INFO_REQUEST; }
 private:
  PushDeviceInfoRequest(PushDeviceInfoRequest&);
  void operator=(PushDeviceInfoRequest&);

  MsgPushDeviceInfoRequest  request_msg_;
};

class AnnounceTokenChangedRequest : public Request {
 public:
  AnnounceTokenChangedRequest() {}
  virtual ~AnnounceTokenChangedRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgAnnounceTokenChangedRequest* mutable_request() { return &request_msg_; }
  const MsgAnnounceTokenChangedRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_ANNOUNCE_TOKEN_CHANGED_REQUEST; }
 private:
  AnnounceTokenChangedRequest(AnnounceTokenChangedRequest&);
  void operator=(AnnounceTokenChangedRequest&);

  MsgAnnounceTokenChangedRequest  request_msg_;
};

class AnnounceExitRequest : public Request {
 public:
  AnnounceExitRequest() {}
  virtual ~AnnounceExitRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgAnnounceExitRequest* mutable_request() { return &request_msg_; }
  const MsgAnnounceExitRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_ANNOUNCE_EXIT_REQUEST; }
 private:
  AnnounceExitRequest(AnnounceExitRequest&);
  void operator=(AnnounceExitRequest&);

  MsgAnnounceExitRequest  request_msg_;
};

class FilterPushSyncMetaRequest : public Request {
 public:
  FilterPushSyncMetaRequest() {}
  virtual ~FilterPushSyncMetaRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgFilterPushSyncMetaRequest* mutable_request() { return &request_msg_; }
  const MsgFilterPushSyncMetaRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_FILTER_PUSH_SYNC_META_REQUEST; }
 private:
  FilterPushSyncMetaRequest(FilterPushSyncMetaRequest&);
  void operator=(FilterPushSyncMetaRequest&);

  MsgFilterPushSyncMetaRequest  request_msg_;
};

class DeviceMetaRequest : public Request {
 public:
  DeviceMetaRequest() {}
  virtual ~DeviceMetaRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DEVICE_META_REQUEST; }
 private:
  DeviceMetaRequest(DeviceMetaRequest&);
  void operator=(DeviceMetaRequest&);
};

class ShareSyncRequest : public Request {
 public:
  ShareSyncRequest() {}
  virtual ~ShareSyncRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgShareSyncRequest* mutable_request() { return &request_msg_; }
  const MsgShareSyncRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SHARE_SYNC_REQUEST; }
 private:
  ShareSyncRequest(ShareSyncRequest&);
  void operator=(ShareSyncRequest&);

  MsgShareSyncRequest  request_msg_;
};

class FindFileRequest : public Request {
 public:
  FindFileRequest() {}
  virtual ~FindFileRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgFindFileRequest* mutable_request() { return &request_msg_; }
  const MsgFindFileRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_FIND_FILE_REQUEST; }
 private:
  FindFileRequest(FindFileRequest&);
  void operator=(FindFileRequest&);

  MsgFindFileRequest  request_msg_;
};

class PushBackupInfoRequest : public Request {
 public:
  PushBackupInfoRequest() {}
  virtual ~PushBackupInfoRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgPushBackupInfoRequest* mutable_request() { return &request_msg_; }
  const MsgPushBackupInfoRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_PUSH_BACKUP_INFO_REQUEST; }
 private:
  PushBackupInfoRequest(PushBackupInfoRequest&);
  void operator=(PushBackupInfoRequest&);

  MsgPushBackupInfoRequest  request_msg_;
};

class RemoveRemoteFileRequest : public Request {
 public:
  RemoveRemoteFileRequest() {}
  virtual ~RemoveRemoteFileRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgRemoveRemoteFileRequest* mutable_request() { return &request_msg_; }
  const MsgRemoveRemoteFileRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_REMOVE_REMOTE_FILE_REQUEST; }
 private:
  RemoveRemoteFileRequest(RemoveRemoteFileRequest&);
  void operator=(RemoveRemoteFileRequest&);

  MsgRemoveRemoteFileRequest  request_msg_;
};

class RefreshRequest : public Request {
 public:
  RefreshRequest() {}
  virtual ~RefreshRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgRefreshRequest* mutable_request() { return &request_msg_; }
  const MsgRefreshRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_REFRESH_REQUEST; }
 private:
  RefreshRequest(RefreshRequest&);
  void operator=(RefreshRequest&);

  MsgRefreshRequest  request_msg_;
};

class SyncRequest : public Request {
 public:
  SyncRequest() {}
  virtual ~SyncRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSyncRequest* mutable_request() { return &request_msg_; }
  const MsgSyncRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SYNC_REQUEST; }
 private:
  SyncRequest(SyncRequest&);
  void operator=(SyncRequest&);

  MsgSyncRequest  request_msg_;
};

class SetRoutePortRequest : public Request {
 public:
  SetRoutePortRequest() {}
  virtual ~SetRoutePortRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSetRoutePortRequest* mutable_request() { return &request_msg_; }
  const MsgSetRoutePortRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_ROUTE_PORT_REQUEST; }
 private:
  SetRoutePortRequest(SetRoutePortRequest&);
  void operator=(SetRoutePortRequest&);

  MsgSetRoutePortRequest  request_msg_;
};

class SetDiscoverPortRequest : public Request {
 public:
  SetDiscoverPortRequest() {}
  virtual ~SetDiscoverPortRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSetDiscoverPortRequest* mutable_request() { return &request_msg_; }
  const MsgSetDiscoverPortRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_DISCOVER_PORT_REQUEST; }
 private:
  SetDiscoverPortRequest(SetDiscoverPortRequest&);
  void operator=(SetDiscoverPortRequest&);

  MsgSetDiscoverPortRequest  request_msg_;
};

class DiscoverPeerEraseRequest : public Request {
 public:
  DiscoverPeerEraseRequest() {}
  virtual ~DiscoverPeerEraseRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgDiscoverPeerEraseRequest* mutable_request() { return &request_msg_; }
  const MsgDiscoverPeerEraseRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_DISCOVER_PEER_ERASE_REQUEST; }
 private:
  DiscoverPeerEraseRequest(DiscoverPeerEraseRequest&);
  void operator=(DiscoverPeerEraseRequest&);

  MsgDiscoverPeerEraseRequest  request_msg_;
};

class MonitorWatchAddRequest : public Request {
 public:
  MonitorWatchAddRequest() {}
  virtual ~MonitorWatchAddRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgMonitorWatchAddRequest* mutable_request() { return &request_msg_; }
  const MsgMonitorWatchAddRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_MONITOR_WATCH_ADD_REQUEST; }
 private:
  MonitorWatchAddRequest(MonitorWatchAddRequest&);
  void operator=(MonitorWatchAddRequest&);

  MsgMonitorWatchAddRequest  request_msg_;
};

class MonitorWatchDelRequest : public Request {
 public:
  MonitorWatchDelRequest() {}
  virtual ~MonitorWatchDelRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgMonitorWatchDelRequest* mutable_request() { return &request_msg_; }
  const MsgMonitorWatchDelRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_MONITOR_WATCH_DEL_REQUEST; }
 private:
  MonitorWatchDelRequest(MonitorWatchDelRequest&);
  void operator=(MonitorWatchDelRequest&);

  MsgMonitorWatchDelRequest  request_msg_;
};

class MonitorReportEventRequest : public Request {
 public:
  MonitorReportEventRequest() {}
  virtual ~MonitorReportEventRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgMonitorReportEventRequest* mutable_request() { return &request_msg_; }
  const MsgMonitorReportEventRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_MONITOR_REPORT_EVENT_REQUEST; }
 private:
  MonitorReportEventRequest(MonitorReportEventRequest&);
  void operator=(MonitorReportEventRequest&);

  MsgMonitorReportEventRequest  request_msg_;
};

class DhtAnnounceRequest : public Request {
 public:
  DhtAnnounceRequest() {}
  virtual ~DhtAnnounceRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DHT_ANNOUNCE_REQUEST; }
 private:
  DhtAnnounceRequest(DhtAnnounceRequest&);
  void operator=(DhtAnnounceRequest&);
};

class BroadcastRequest : public Request {
 public:
  BroadcastRequest() {}
  virtual ~BroadcastRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_BROADCAST_REQUEST; }
 private:
  BroadcastRequest(BroadcastRequest&);
  void operator=(BroadcastRequest&);
};

class CheckPeerExpiredRequest : public Request {
 public:
  CheckPeerExpiredRequest() {}
  virtual ~CheckPeerExpiredRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_CHECK_PEER_EXPIRED_REQUEST; }
 private:
  CheckPeerExpiredRequest(CheckPeerExpiredRequest&);
  void operator=(CheckPeerExpiredRequest&);
};

class IssueTokenChangedRequest : public Request {
 public:
  IssueTokenChangedRequest() {}
  virtual ~IssueTokenChangedRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgIssueTokenChangedRequest* mutable_request() { return &request_msg_; }
  const MsgIssueTokenChangedRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_ISSUE_TOKEN_CHANGED_REQUEST; }
 private:
  IssueTokenChangedRequest(IssueTokenChangedRequest&);
  void operator=(IssueTokenChangedRequest&);

  MsgIssueTokenChangedRequest  request_msg_;
};

class IssueDeviceInfoRequest : public Request {
 public:
  IssueDeviceInfoRequest() {}
  virtual ~IssueDeviceInfoRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgIssueDeviceInfoRequest* mutable_request() { return &request_msg_; }
  const MsgIssueDeviceInfoRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_ISSUE_DEVICE_INFO_REQUEST; }
 private:
  IssueDeviceInfoRequest(IssueDeviceInfoRequest&);
  void operator=(IssueDeviceInfoRequest&);

  MsgIssueDeviceInfoRequest  request_msg_;
};

class IssuePushDeviceInfoRequest : public Request {
 public:
  IssuePushDeviceInfoRequest() {}
  virtual ~IssuePushDeviceInfoRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgIssuePushDeviceInfoRequest* mutable_request() { return &request_msg_; }
  const MsgIssuePushDeviceInfoRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_ISSUE_PUSH_DEVICE_INFO_REQUEST; }
 private:
  IssuePushDeviceInfoRequest(IssuePushDeviceInfoRequest&);
  void operator=(IssuePushDeviceInfoRequest&);

  MsgIssuePushDeviceInfoRequest  request_msg_;
};

class IssuePushDeviceMetaRequest : public Request {
 public:
  IssuePushDeviceMetaRequest() {}
  virtual ~IssuePushDeviceMetaRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgIssuePushDeviceMetaRequest* mutable_request() { return &request_msg_; }
  const MsgIssuePushDeviceMetaRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_ISSUE_PUSH_DEVICE_META_REQUEST; }
 private:
  IssuePushDeviceMetaRequest(IssuePushDeviceMetaRequest&);
  void operator=(IssuePushDeviceMetaRequest&);

  MsgIssuePushDeviceMetaRequest  request_msg_;
};

class IssuePushSyncInfoRequest : public Request {
 public:
  IssuePushSyncInfoRequest() {}
  virtual ~IssuePushSyncInfoRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgIssuePushSyncInfoRequest* mutable_request() { return &request_msg_; }
  const MsgIssuePushSyncInfoRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_ISSUE_PUSH_SYNC_INFO_REQUEST; }
 private:
  IssuePushSyncInfoRequest(IssuePushSyncInfoRequest&);
  void operator=(IssuePushSyncInfoRequest&);

  MsgIssuePushSyncInfoRequest  request_msg_;
};

class IssuePushTreeInfoRequest : public Request {
 public:
  IssuePushTreeInfoRequest() {}
  virtual ~IssuePushTreeInfoRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgIssuePushTreeInfoRequest* mutable_request() { return &request_msg_; }
  const MsgIssuePushTreeInfoRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_ISSUE_PUSH_TREE_INFO_REQUEST; }
 private:
  IssuePushTreeInfoRequest(IssuePushTreeInfoRequest&);
  void operator=(IssuePushTreeInfoRequest&);

  MsgIssuePushTreeInfoRequest  request_msg_;
};

class ReportDataRequest : public Request {
 public:
  ReportDataRequest() {}
  virtual ~ReportDataRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgReportDataRequest* mutable_request() { return &request_msg_; }
  const MsgReportDataRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_REPORT_DATA_REQUEST; }
 private:
  ReportDataRequest(ReportDataRequest&);
  void operator=(ReportDataRequest&);

  MsgReportDataRequest  request_msg_;
};

class ReportUiMonitorRequest : public Request {
 public:
  ReportUiMonitorRequest() {}
  virtual ~ReportUiMonitorRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_REPORT_UI_MONITOR_REQUEST; }
 private:
  ReportUiMonitorRequest(ReportUiMonitorRequest&);
  void operator=(ReportUiMonitorRequest&);
};

class RouteStartupRequest : public Request {
 public:
  RouteStartupRequest() {}
  virtual ~RouteStartupRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ROUTE_STARTUP_REQUEST; }
 private:
  RouteStartupRequest(RouteStartupRequest&);
  void operator=(RouteStartupRequest&);
};

class RouteShutdownRequest : public Request {
 public:
  RouteShutdownRequest() {}
  virtual ~RouteShutdownRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ROUTE_SHUTDOWN_REQUEST; }
 private:
  RouteShutdownRequest(RouteShutdownRequest&);
  void operator=(RouteShutdownRequest&);
};

class DiscoverSetBackgroundRequest : public Request {
 public:
  DiscoverSetBackgroundRequest() {}
  virtual ~DiscoverSetBackgroundRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DISCOVER_SET_BACKGROUND_REQUEST; }
 private:
  DiscoverSetBackgroundRequest(DiscoverSetBackgroundRequest&);
  void operator=(DiscoverSetBackgroundRequest&);
};

class DiscoverSetForegroundRequest : public Request {
 public:
  DiscoverSetForegroundRequest() {}
  virtual ~DiscoverSetForegroundRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DISCOVER_SET_FOREGROUND_REQUEST; }
 private:
  DiscoverSetForegroundRequest(DiscoverSetForegroundRequest&);
  void operator=(DiscoverSetForegroundRequest&);
};

class QueryCacheUpdateRequest : public Request {
 public:
  QueryCacheUpdateRequest() {}
  virtual ~QueryCacheUpdateRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_QUERY_CACHE_UPDATE_REQUEST; }
 private:
  QueryCacheUpdateRequest(QueryCacheUpdateRequest&);
  void operator=(QueryCacheUpdateRequest&);
};

class UpdateAllTreePairStatusRequest : public Request {
 public:
  UpdateAllTreePairStatusRequest() {}
  virtual ~UpdateAllTreePairStatusRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_UPDATE_ALL_TREE_PAIR_STATUS_REQUEST; }
 private:
  UpdateAllTreePairStatusRequest(UpdateAllTreePairStatusRequest&);
  void operator=(UpdateAllTreePairStatusRequest&);
};

class DeviceAddRequest : public Request {
 public:
  DeviceAddRequest() {}
  virtual ~DeviceAddRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgDeviceAddRequest* mutable_request() { return &request_msg_; }
  const MsgDeviceAddRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_DEVICE_ADD_REQUEST; }
 private:
  DeviceAddRequest(DeviceAddRequest&);
  void operator=(DeviceAddRequest&);

  MsgDeviceAddRequest  request_msg_;
};

class RemoteDeviceShowRequest : public Request {
 public:
  RemoteDeviceShowRequest() {}
  virtual ~RemoteDeviceShowRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_REMOTE_DEVICE_SHOW_REQUEST; }
 private:
  RemoteDeviceShowRequest(RemoteDeviceShowRequest&);
  void operator=(RemoteDeviceShowRequest&);
};

class DatabaseInitRequest : public Request {
 public:
  DatabaseInitRequest() {}
  virtual ~DatabaseInitRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DATABASE_INIT_REQUEST; }
 private:
  DatabaseInitRequest(DatabaseInitRequest&);
  void operator=(DatabaseInitRequest&);
};

class MonitorEnableRequest : public Request {
 public:
  MonitorEnableRequest() {}
  virtual ~MonitorEnableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_MONITOR_ENABLE_REQUEST; }
 private:
  MonitorEnableRequest(MonitorEnableRequest&);
  void operator=(MonitorEnableRequest&);
};

class MonitorDisableRequest : public Request {
 public:
  MonitorDisableRequest() {}
  virtual ~MonitorDisableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_MONITOR_DISABLE_REQUEST; }
 private:
  MonitorDisableRequest(MonitorDisableRequest&);
  void operator=(MonitorDisableRequest&);
};

class SyncAddRequest : public Request {
 public:
  SyncAddRequest() {}
  virtual ~SyncAddRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSyncAddRequest* mutable_request() { return &request_msg_; }
  const MsgSyncAddRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SYNC_ADD_REQUEST; }
 private:
  SyncAddRequest(SyncAddRequest&);
  void operator=(SyncAddRequest&);

  MsgSyncAddRequest  request_msg_;
};

class SyncDelRequest : public Request {
 public:
  SyncDelRequest() {}
  virtual ~SyncDelRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSyncDelRequest* mutable_request() { return &request_msg_; }
  const MsgSyncDelRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SYNC_DEL_REQUEST; }
 private:
  SyncDelRequest(SyncDelRequest&);
  void operator=(SyncDelRequest&);

  MsgSyncDelRequest  request_msg_;
};

class SyncQueryRequest : public Request {
 public:
  SyncQueryRequest() {}
  virtual ~SyncQueryRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSyncQueryRequest* mutable_request() { return &request_msg_; }
  const MsgSyncQueryRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SYNC_QUERY_REQUEST; }
 private:
  SyncQueryRequest(SyncQueryRequest&);
  void operator=(SyncQueryRequest&);

  MsgSyncQueryRequest  request_msg_;
};

class TreeAddRequest : public Request {
 public:
  TreeAddRequest() {}
  virtual ~TreeAddRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgTreeAddRequest* mutable_request() { return &request_msg_; }
  const MsgTreeAddRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_TREE_ADD_REQUEST; }
 private:
  TreeAddRequest(TreeAddRequest&);
  void operator=(TreeAddRequest&);

  MsgTreeAddRequest  request_msg_;
};

class TreeDelRequest : public Request {
 public:
  TreeDelRequest() {}
  virtual ~TreeDelRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgTreeDelRequest* mutable_request() { return &request_msg_; }
  const MsgTreeDelRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_TREE_DEL_REQUEST; }
 private:
  TreeDelRequest(TreeDelRequest&);
  void operator=(TreeDelRequest&);

  MsgTreeDelRequest  request_msg_;
};

class RemoteTreeAddRequest : public Request {
 public:
  RemoteTreeAddRequest() {}
  virtual ~RemoteTreeAddRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgRemoteTreeAddRequest* mutable_request() { return &request_msg_; }
  const MsgRemoteTreeAddRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_REMOTE_TREE_ADD_REQUEST; }
 private:
  RemoteTreeAddRequest(RemoteTreeAddRequest&);
  void operator=(RemoteTreeAddRequest&);

  MsgRemoteTreeAddRequest  request_msg_;
};

class TreeShowRequest : public Request {
 public:
  TreeShowRequest() {}
  virtual ~TreeShowRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_TREE_SHOW_REQUEST; }
 private:
  TreeShowRequest(TreeShowRequest&);
  void operator=(TreeShowRequest&);
};

class AddFavoriteRequest : public Request {
 public:
  AddFavoriteRequest() {}
  virtual ~AddFavoriteRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgAddFavoriteRequest* mutable_request() { return &request_msg_; }
  const MsgAddFavoriteRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_ADD_FAVORITE_REQUEST; }
 private:
  AddFavoriteRequest(AddFavoriteRequest&);
  void operator=(AddFavoriteRequest&);

  MsgAddFavoriteRequest  request_msg_;
};

class TestFindRequest : public Request {
 public:
  TestFindRequest() {}
  virtual ~TestFindRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgTestFindRequest* mutable_request() { return &request_msg_; }
  const MsgTestFindRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_TEST_FIND_REQUEST; }
 private:
  TestFindRequest(TestFindRequest&);
  void operator=(TestFindRequest&);

  MsgTestFindRequest  request_msg_;
};

class ListSyncRequest : public Request {
 public:
  ListSyncRequest() {}
  virtual ~ListSyncRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgListSyncRequest* mutable_request() { return &request_msg_; }
  const MsgListSyncRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_LIST_SYNC_REQUEST; }
 private:
  ListSyncRequest(ListSyncRequest&);
  void operator=(ListSyncRequest&);

  MsgListSyncRequest  request_msg_;
};

class DhtAnnounceEnableRequest : public Request {
 public:
  DhtAnnounceEnableRequest() {}
  virtual ~DhtAnnounceEnableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DHT_ANNOUNCE_ENABLE_REQUEST; }
 private:
  DhtAnnounceEnableRequest(DhtAnnounceEnableRequest&);
  void operator=(DhtAnnounceEnableRequest&);
};

class DhtAnnounceDisableRequest : public Request {
 public:
  DhtAnnounceDisableRequest() {}
  virtual ~DhtAnnounceDisableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DHT_ANNOUNCE_DISABLE_REQUEST; }
 private:
  DhtAnnounceDisableRequest(DhtAnnounceDisableRequest&);
  void operator=(DhtAnnounceDisableRequest&);
};

class BroadcastEnableRequest : public Request {
 public:
  BroadcastEnableRequest() {}
  virtual ~BroadcastEnableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_BROADCAST_ENABLE_REQUEST; }
 private:
  BroadcastEnableRequest(BroadcastEnableRequest&);
  void operator=(BroadcastEnableRequest&);
};

class BroadcastDisableRequest : public Request {
 public:
  BroadcastDisableRequest() {}
  virtual ~BroadcastDisableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_BROADCAST_DISABLE_REQUEST; }
 private:
  BroadcastDisableRequest(BroadcastDisableRequest&);
  void operator=(BroadcastDisableRequest&);
};

class AutoSyncEnableRequest : public Request {
 public:
  AutoSyncEnableRequest() {}
  virtual ~AutoSyncEnableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_AUTO_SYNC_ENABLE_REQUEST; }
 private:
  AutoSyncEnableRequest(AutoSyncEnableRequest&);
  void operator=(AutoSyncEnableRequest&);
};

class AutoSyncDisableRequest : public Request {
 public:
  AutoSyncDisableRequest() {}
  virtual ~AutoSyncDisableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_AUTO_SYNC_DISABLE_REQUEST; }
 private:
  AutoSyncDisableRequest(AutoSyncDisableRequest&);
  void operator=(AutoSyncDisableRequest&);
};

class SetAccountRequest : public Request {
 public:
  SetAccountRequest() {}
  virtual ~SetAccountRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSetAccountRequest* mutable_request() { return &request_msg_; }
  const MsgSetAccountRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_ACCOUNT_REQUEST; }
 private:
  SetAccountRequest(SetAccountRequest&);
  void operator=(SetAccountRequest&);

  MsgSetAccountRequest  request_msg_;
};

class SyncShowRequest : public Request {
 public:
  SyncShowRequest() {}
  virtual ~SyncShowRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SYNC_SHOW_REQUEST; }
 private:
  SyncShowRequest(SyncShowRequest&);
  void operator=(SyncShowRequest&);
};

class DiscoverCacheClearRequest : public Request {
 public:
  DiscoverCacheClearRequest() {}
  virtual ~DiscoverCacheClearRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DISCOVER_CACHE_CLEAR_REQUEST; }
 private:
  DiscoverCacheClearRequest(DiscoverCacheClearRequest&);
  void operator=(DiscoverCacheClearRequest&);
};

class DeviceInfoEnableRequest : public Request {
 public:
  DeviceInfoEnableRequest() {}
  virtual ~DeviceInfoEnableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DEVICE_INFO_ENABLE_REQUEST; }
 private:
  DeviceInfoEnableRequest(DeviceInfoEnableRequest&);
  void operator=(DeviceInfoEnableRequest&);
};

class DeviceInfoDisableRequest : public Request {
 public:
  DeviceInfoDisableRequest() {}
  virtual ~DeviceInfoDisableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DEVICE_INFO_DISABLE_REQUEST; }
 private:
  DeviceInfoDisableRequest(DeviceInfoDisableRequest&);
  void operator=(DeviceInfoDisableRequest&);
};

class PushDeviceInfoEnableRequest : public Request {
 public:
  PushDeviceInfoEnableRequest() {}
  virtual ~PushDeviceInfoEnableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_PUSH_DEVICE_INFO_ENABLE_REQUEST; }
 private:
  PushDeviceInfoEnableRequest(PushDeviceInfoEnableRequest&);
  void operator=(PushDeviceInfoEnableRequest&);
};

class PushDeviceInfoDisableRequest : public Request {
 public:
  PushDeviceInfoDisableRequest() {}
  virtual ~PushDeviceInfoDisableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_PUSH_DEVICE_INFO_DISABLE_REQUEST; }
 private:
  PushDeviceInfoDisableRequest(PushDeviceInfoDisableRequest&);
  void operator=(PushDeviceInfoDisableRequest&);
};

class StartupDiscoverDeviceRequest : public Request {
 public:
  StartupDiscoverDeviceRequest() {}
  virtual ~StartupDiscoverDeviceRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgStartupDiscoverDeviceRequest* mutable_request() { return &request_msg_; }
  const MsgStartupDiscoverDeviceRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_STARTUP_DISCOVER_DEVICE_REQUEST; }
 private:
  StartupDiscoverDeviceRequest(StartupDiscoverDeviceRequest&);
  void operator=(StartupDiscoverDeviceRequest&);

  MsgStartupDiscoverDeviceRequest  request_msg_;
};

class ShutdownDiscoverDeviceRequest : public Request {
 public:
  ShutdownDiscoverDeviceRequest() {}
  virtual ~ShutdownDiscoverDeviceRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgShutdownDiscoverDeviceRequest* mutable_request() { return &request_msg_; }
  const MsgShutdownDiscoverDeviceRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SHUTDOWN_DISCOVER_DEVICE_REQUEST; }
 private:
  ShutdownDiscoverDeviceRequest(ShutdownDiscoverDeviceRequest&);
  void operator=(ShutdownDiscoverDeviceRequest&);

  MsgShutdownDiscoverDeviceRequest  request_msg_;
};

class GetDiscoveredDeviceRequest : public Request {
 public:
  GetDiscoveredDeviceRequest() {}
  virtual ~GetDiscoveredDeviceRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgGetDiscoveredDeviceRequest* mutable_request() { return &request_msg_; }
  const MsgGetDiscoveredDeviceRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_GET_DISCOVERED_DEVICE_REQUEST; }
 private:
  GetDiscoveredDeviceRequest(GetDiscoveredDeviceRequest&);
  void operator=(GetDiscoveredDeviceRequest&);

  MsgGetDiscoveredDeviceRequest  request_msg_;
};

class TestShareSyncRequest : public Request {
 public:
  TestShareSyncRequest() {}
  virtual ~TestShareSyncRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgTestShareSyncRequest* mutable_request() { return &request_msg_; }
  const MsgTestShareSyncRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_TEST_SHARE_SYNC_REQUEST; }
 private:
  TestShareSyncRequest(TestShareSyncRequest&);
  void operator=(TestShareSyncRequest&);

  MsgTestShareSyncRequest  request_msg_;
};

class StartupDownloadRequest : public Request {
 public:
  StartupDownloadRequest() {}
  virtual ~StartupDownloadRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgStartupDownloadRequest* mutable_request() { return &request_msg_; }
  const MsgStartupDownloadRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_STARTUP_DOWNLOAD_REQUEST; }
 private:
  StartupDownloadRequest(StartupDownloadRequest&);
  void operator=(StartupDownloadRequest&);

  MsgStartupDownloadRequest  request_msg_;
};

class ShutdownDownloadRequest : public Request {
 public:
  ShutdownDownloadRequest() {}
  virtual ~ShutdownDownloadRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgShutdownDownloadRequest* mutable_request() { return &request_msg_; }
  const MsgShutdownDownloadRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SHUTDOWN_DOWNLOAD_REQUEST; }
 private:
  ShutdownDownloadRequest(ShutdownDownloadRequest&);
  void operator=(ShutdownDownloadRequest&);

  MsgShutdownDownloadRequest  request_msg_;
};

class BackupAddRequest : public Request {
 public:
  BackupAddRequest() {}
  virtual ~BackupAddRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgBackupAddRequest* mutable_request() { return &request_msg_; }
  const MsgBackupAddRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_BACKUP_ADD_REQUEST; }
 private:
  BackupAddRequest(BackupAddRequest&);
  void operator=(BackupAddRequest&);

  MsgBackupAddRequest  request_msg_;
};

class BackupDelRequest : public Request {
 public:
  BackupDelRequest() {}
  virtual ~BackupDelRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgBackupDelRequest* mutable_request() { return &request_msg_; }
  const MsgBackupDelRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_BACKUP_DEL_REQUEST; }
 private:
  BackupDelRequest(BackupDelRequest&);
  void operator=(BackupDelRequest&);

  MsgBackupDelRequest  request_msg_;
};

class BackupShowRequest : public Request {
 public:
  BackupShowRequest() {}
  virtual ~BackupShowRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_BACKUP_SHOW_REQUEST; }
 private:
  BackupShowRequest(BackupShowRequest&);
  void operator=(BackupShowRequest&);
};

class AddBackupTargetDeviceRequest : public Request {
 public:
  AddBackupTargetDeviceRequest() {}
  virtual ~AddBackupTargetDeviceRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgAddBackupTargetDeviceRequest* mutable_request() { return &request_msg_; }
  const MsgAddBackupTargetDeviceRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_ADD_BACKUP_TARGET_DEVICE_REQUEST; }
 private:
  AddBackupTargetDeviceRequest(AddBackupTargetDeviceRequest&);
  void operator=(AddBackupTargetDeviceRequest&);

  MsgAddBackupTargetDeviceRequest  request_msg_;
};

class DelBackupTargetDeviceRequest : public Request {
 public:
  DelBackupTargetDeviceRequest() {}
  virtual ~DelBackupTargetDeviceRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgDelBackupTargetDeviceRequest* mutable_request() { return &request_msg_; }
  const MsgDelBackupTargetDeviceRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_DEL_BACKUP_TARGET_DEVICE_REQUEST; }
 private:
  DelBackupTargetDeviceRequest(DelBackupTargetDeviceRequest&);
  void operator=(DelBackupTargetDeviceRequest&);

  MsgDelBackupTargetDeviceRequest  request_msg_;
};

class SetBackupRootRequest : public Request {
 public:
  SetBackupRootRequest() {}
  virtual ~SetBackupRootRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSetBackupRootRequest* mutable_request() { return &request_msg_; }
  const MsgSetBackupRootRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_BACKUP_ROOT_REQUEST; }
 private:
  SetBackupRootRequest(SetBackupRootRequest&);
  void operator=(SetBackupRootRequest&);

  MsgSetBackupRootRequest  request_msg_;
};

class SetTestPlatformRequest : public Request {
 public:
  SetTestPlatformRequest() {}
  virtual ~SetTestPlatformRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSetTestPlatformRequest* mutable_request() { return &request_msg_; }
  const MsgSetTestPlatformRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_TEST_PLATFORM_REQUEST; }
 private:
  SetTestPlatformRequest(SetTestPlatformRequest&);
  void operator=(SetTestPlatformRequest&);

  MsgSetTestPlatformRequest  request_msg_;
};

class ClearTestPlatformRequest : public Request {
 public:
  ClearTestPlatformRequest() {}
  virtual ~ClearTestPlatformRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_CLEAR_TEST_PLATFORM_REQUEST; }
 private:
  ClearTestPlatformRequest(ClearTestPlatformRequest&);
  void operator=(ClearTestPlatformRequest&);
};

class SetSyncModeRequest : public Request {
 public:
  SetSyncModeRequest() {}
  virtual ~SetSyncModeRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSetSyncModeRequest* mutable_request() { return &request_msg_; }
  const MsgSetSyncModeRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_SYNC_MODE_REQUEST; }
 private:
  SetSyncModeRequest(SetSyncModeRequest&);
  void operator=(SetSyncModeRequest&);

  MsgSetSyncModeRequest  request_msg_;
};

class GetSyncModeRequest : public Request {
 public:
  GetSyncModeRequest() {}
  virtual ~GetSyncModeRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgGetSyncModeRequest* mutable_request() { return &request_msg_; }
  const MsgGetSyncModeRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_GET_SYNC_MODE_REQUEST; }
 private:
  GetSyncModeRequest(GetSyncModeRequest&);
  void operator=(GetSyncModeRequest&);

  MsgGetSyncModeRequest  request_msg_;
};

class QueryTreePairStatusRequest : public Request {
 public:
  QueryTreePairStatusRequest() {}
  virtual ~QueryTreePairStatusRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgQueryTreePairStatusRequest* mutable_request() { return &request_msg_; }
  const MsgQueryTreePairStatusRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_TREE_PAIR_STATUS_REQUEST; }
 private:
  QueryTreePairStatusRequest(QueryTreePairStatusRequest&);
  void operator=(QueryTreePairStatusRequest&);

  MsgQueryTreePairStatusRequest  request_msg_;
};

class SetTreeRootRequest : public Request {
 public:
  SetTreeRootRequest() {}
  virtual ~SetTreeRootRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSetTreeRootRequest* mutable_request() { return &request_msg_; }
  const MsgSetTreeRootRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_TREE_ROOT_REQUEST; }
 private:
  SetTreeRootRequest(SetTreeRootRequest&);
  void operator=(SetTreeRootRequest&);

  MsgSetTreeRootRequest  request_msg_;
};

class DelBackupTargetRequest : public Request {
 public:
  DelBackupTargetRequest() {}
  virtual ~DelBackupTargetRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgDelBackupTargetRequest* mutable_request() { return &request_msg_; }
  const MsgDelBackupTargetRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_DEL_BACKUP_TARGET_REQUEST; }
 private:
  DelBackupTargetRequest(DelBackupTargetRequest&);
  void operator=(DelBackupTargetRequest&);

  MsgDelBackupTargetRequest  request_msg_;
};

class SetShareSyncPermRequest : public Request {
 public:
  SetShareSyncPermRequest() {}
  virtual ~SetShareSyncPermRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSetShareSyncPermRequest* mutable_request() { return &request_msg_; }
  const MsgSetShareSyncPermRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_SHARE_SYNC_PERM_REQUEST; }
 private:
  SetShareSyncPermRequest(SetShareSyncPermRequest&);
  void operator=(SetShareSyncPermRequest&);

  MsgSetShareSyncPermRequest  request_msg_;
};

class GetShareSyncPermRequest : public Request {
 public:
  GetShareSyncPermRequest() {}
  virtual ~GetShareSyncPermRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgGetShareSyncPermRequest* mutable_request() { return &request_msg_; }
  const MsgGetShareSyncPermRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_GET_SHARE_SYNC_PERM_REQUEST; }
 private:
  GetShareSyncPermRequest(GetShareSyncPermRequest&);
  void operator=(GetShareSyncPermRequest&);

  MsgGetShareSyncPermRequest  request_msg_;
};

class AnnounceTokenChangedEnableRequest : public Request {
 public:
  AnnounceTokenChangedEnableRequest() {}
  virtual ~AnnounceTokenChangedEnableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ANNOUNCE_TOKEN_CHANGED_ENABLE_REQUEST; }
 private:
  AnnounceTokenChangedEnableRequest(AnnounceTokenChangedEnableRequest&);
  void operator=(AnnounceTokenChangedEnableRequest&);
};

class AnnounceTokenChangedDisableRequest : public Request {
 public:
  AnnounceTokenChangedDisableRequest() {}
  virtual ~AnnounceTokenChangedDisableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ANNOUNCE_TOKEN_CHANGED_DISABLE_REQUEST; }
 private:
  AnnounceTokenChangedDisableRequest(AnnounceTokenChangedDisableRequest&);
  void operator=(AnnounceTokenChangedDisableRequest&);
};

class SetDownloadCacheVolumeRequest : public Request {
 public:
  SetDownloadCacheVolumeRequest() {}
  virtual ~SetDownloadCacheVolumeRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSetDownloadCacheVolumeRequest* mutable_request() { return &request_msg_; }
  const MsgSetDownloadCacheVolumeRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_DOWNLOAD_CACHE_VOLUME_REQUEST; }
 private:
  SetDownloadCacheVolumeRequest(SetDownloadCacheVolumeRequest&);
  void operator=(SetDownloadCacheVolumeRequest&);

  MsgSetDownloadCacheVolumeRequest  request_msg_;
};

class QueryDownloadStatusRequest : public Request {
 public:
  QueryDownloadStatusRequest() {}
  virtual ~QueryDownloadStatusRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgQueryDownloadStatusRequest* mutable_request() { return &request_msg_; }
  const MsgQueryDownloadStatusRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_DOWNLOAD_STATUS_REQUEST; }
 private:
  QueryDownloadStatusRequest(QueryDownloadStatusRequest&);
  void operator=(QueryDownloadStatusRequest&);

  MsgQueryDownloadStatusRequest  request_msg_;
};

class StartupUploadRequest : public Request {
 public:
  StartupUploadRequest() {}
  virtual ~StartupUploadRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgStartupUploadRequest* mutable_request() { return &request_msg_; }
  const MsgStartupUploadRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_STARTUP_UPLOAD_REQUEST; }
 private:
  StartupUploadRequest(StartupUploadRequest&);
  void operator=(StartupUploadRequest&);

  MsgStartupUploadRequest  request_msg_;
};

class ShutdownUploadRequest : public Request {
 public:
  ShutdownUploadRequest() {}
  virtual ~ShutdownUploadRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgShutdownUploadRequest* mutable_request() { return &request_msg_; }
  const MsgShutdownUploadRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SHUTDOWN_UPLOAD_REQUEST; }
 private:
  ShutdownUploadRequest(ShutdownUploadRequest&);
  void operator=(ShutdownUploadRequest&);

  MsgShutdownUploadRequest  request_msg_;
};

class QueryUploadStatusRequest : public Request {
 public:
  QueryUploadStatusRequest() {}
  virtual ~QueryUploadStatusRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgQueryUploadStatusRequest* mutable_request() { return &request_msg_; }
  const MsgQueryUploadStatusRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_UPLOAD_STATUS_REQUEST; }
 private:
  QueryUploadStatusRequest(QueryUploadStatusRequest&);
  void operator=(QueryUploadStatusRequest&);

  MsgQueryUploadStatusRequest  request_msg_;
};

class GetDownloadCacheAmountRequest : public Request {
 public:
  GetDownloadCacheAmountRequest() {}
  virtual ~GetDownloadCacheAmountRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_GET_DOWNLOAD_CACHE_AMOUNT_REQUEST; }
 private:
  GetDownloadCacheAmountRequest(GetDownloadCacheAmountRequest&);
  void operator=(GetDownloadCacheAmountRequest&);
};

class GetDownloadCacheRootRequest : public Request {
 public:
  GetDownloadCacheRootRequest() {}
  virtual ~GetDownloadCacheRootRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_GET_DOWNLOAD_CACHE_ROOT_REQUEST; }
 private:
  GetDownloadCacheRootRequest(GetDownloadCacheRootRequest&);
  void operator=(GetDownloadCacheRootRequest&);
};

class CleanUpDownloadCacheRequest : public Request {
 public:
  CleanUpDownloadCacheRequest() {}
  virtual ~CleanUpDownloadCacheRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_CLEAN_UP_DOWNLOAD_CACHE_REQUEST; }
 private:
  CleanUpDownloadCacheRequest(CleanUpDownloadCacheRequest&);
  void operator=(CleanUpDownloadCacheRequest&);
};

class QueryHistoryInfoRequest : public Request {
 public:
  QueryHistoryInfoRequest() {}
  virtual ~QueryHistoryInfoRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgQueryHistoryInfoRequest* mutable_request() { return &request_msg_; }
  const MsgQueryHistoryInfoRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_HISTORY_INFO_REQUEST; }
 private:
  QueryHistoryInfoRequest(QueryHistoryInfoRequest&);
  void operator=(QueryHistoryInfoRequest&);

  MsgQueryHistoryInfoRequest  request_msg_;
};

class PermissionVerifyRequest : public Request {
 public:
  PermissionVerifyRequest() {}
  virtual ~PermissionVerifyRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgPermissionVerifyRequest* mutable_request() { return &request_msg_; }
  const MsgPermissionVerifyRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_PERMISSION_VERIFY_REQUEST; }
 private:
  PermissionVerifyRequest(PermissionVerifyRequest&);
  void operator=(PermissionVerifyRequest&);

  MsgPermissionVerifyRequest  request_msg_;
};

class QueryPermissionsRequest : public Request {
 public:
  QueryPermissionsRequest() {}
  virtual ~QueryPermissionsRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgQueryPermissionsRequest* mutable_request() { return &request_msg_; }
  const MsgQueryPermissionsRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_PERMISSIONS_REQUEST; }
 private:
  QueryPermissionsRequest(QueryPermissionsRequest&);
  void operator=(QueryPermissionsRequest&);

  MsgQueryPermissionsRequest  request_msg_;
};

class SetMacAddressInDbRequest : public Request {
 public:
  SetMacAddressInDbRequest() {}
  virtual ~SetMacAddressInDbRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSetMacAddressInDbRequest* mutable_request() { return &request_msg_; }
  const MsgSetMacAddressInDbRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_MAC_ADDRESS_IN_DB_REQUEST; }
 private:
  SetMacAddressInDbRequest(SetMacAddressInDbRequest&);
  void operator=(SetMacAddressInDbRequest&);

  MsgSetMacAddressInDbRequest  request_msg_;
};

class SetExpiredTimeInDbRequest : public Request {
 public:
  SetExpiredTimeInDbRequest() {}
  virtual ~SetExpiredTimeInDbRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSetExpiredTimeInDbRequest* mutable_request() { return &request_msg_; }
  const MsgSetExpiredTimeInDbRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_EXPIRED_TIME_IN_DB_REQUEST; }
 private:
  SetExpiredTimeInDbRequest(SetExpiredTimeInDbRequest&);
  void operator=(SetExpiredTimeInDbRequest&);

  MsgSetExpiredTimeInDbRequest  request_msg_;
};

class ClearPermissionsRequest : public Request {
 public:
  ClearPermissionsRequest() {}
  virtual ~ClearPermissionsRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgClearPermissionsRequest* mutable_request() { return &request_msg_; }
  const MsgClearPermissionsRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_CLEAR_PERMISSIONS_REQUEST; }
 private:
  ClearPermissionsRequest(ClearPermissionsRequest&);
  void operator=(ClearPermissionsRequest&);

  MsgClearPermissionsRequest  request_msg_;
};

class QueryVerifyStatusRequest : public Request {
 public:
  QueryVerifyStatusRequest() {}
  virtual ~QueryVerifyStatusRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgQueryVerifyStatusRequest* mutable_request() { return &request_msg_; }
  const MsgQueryVerifyStatusRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_VERIFY_STATUS_REQUEST; }
 private:
  QueryVerifyStatusRequest(QueryVerifyStatusRequest&);
  void operator=(QueryVerifyStatusRequest&);

  MsgQueryVerifyStatusRequest  request_msg_;
};

class QueryVerifyIdentifyInfoRequest : public Request {
 public:
  QueryVerifyIdentifyInfoRequest() {}
  virtual ~QueryVerifyIdentifyInfoRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgQueryVerifyIdentifyInfoRequest* mutable_request() { return &request_msg_; }
  const MsgQueryVerifyIdentifyInfoRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_VERIFY_IDENTIFY_INFO_REQUEST; }
 private:
  QueryVerifyIdentifyInfoRequest(QueryVerifyIdentifyInfoRequest&);
  void operator=(QueryVerifyIdentifyInfoRequest&);

  MsgQueryVerifyIdentifyInfoRequest  request_msg_;
};

class SyncControlerRequest : public Request {
 public:
  SyncControlerRequest() {}
  virtual ~SyncControlerRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSyncControlerRequest* mutable_request() { return &request_msg_; }
  const MsgSyncControlerRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SYNC_CONTROLER_REQUEST; }
 private:
  SyncControlerRequest(SyncControlerRequest&);
  void operator=(SyncControlerRequest&);

  MsgSyncControlerRequest  request_msg_;
};

class VerifyBindRequest : public Request {
 public:
  VerifyBindRequest() {}
  virtual ~VerifyBindRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgVerifyBindRequest* mutable_request() { return &request_msg_; }
  const MsgVerifyBindRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_VERIFY_BIND_REQUEST; }
 private:
  VerifyBindRequest(VerifyBindRequest&);
  void operator=(VerifyBindRequest&);

  MsgVerifyBindRequest  request_msg_;
};

class VerifyUnbindRequest : public Request {
 public:
  VerifyUnbindRequest() {}
  virtual ~VerifyUnbindRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgVerifyUnbindRequest* mutable_request() { return &request_msg_; }
  const MsgVerifyUnbindRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_VERIFY_UNBIND_REQUEST; }
 private:
  VerifyUnbindRequest(VerifyUnbindRequest&);
  void operator=(VerifyUnbindRequest&);

  MsgVerifyUnbindRequest  request_msg_;
};

class SetSyncPermRequest : public Request {
 public:
  SetSyncPermRequest() {}
  virtual ~SetSyncPermRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgSetSyncPermRequest* mutable_request() { return &request_msg_; }
  const MsgSetSyncPermRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_SYNC_PERM_REQUEST; }
 private:
  SetSyncPermRequest(SetSyncPermRequest&);
  void operator=(SetSyncPermRequest&);

  MsgSetSyncPermRequest  request_msg_;
};

class AddStaticPeersRequest : public Request {
 public:
  AddStaticPeersRequest() {}
  virtual ~AddStaticPeersRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgAddStaticPeersRequest* mutable_request() { return &request_msg_; }
  const MsgAddStaticPeersRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_ADD_STATIC_PEERS_REQUEST; }
 private:
  AddStaticPeersRequest(AddStaticPeersRequest&);
  void operator=(AddStaticPeersRequest&);

  MsgAddStaticPeersRequest  request_msg_;
};

class GetActiveIpRequest : public Request {
 public:
  GetActiveIpRequest() {}
  virtual ~GetActiveIpRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgGetActiveIpRequest* mutable_request() { return &request_msg_; }
  const MsgGetActiveIpRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_GET_ACTIVE_IP_REQUEST; }
 private:
  GetActiveIpRequest(GetActiveIpRequest&);
  void operator=(GetActiveIpRequest&);

  MsgGetActiveIpRequest  request_msg_;
};

class DeleteWatchRequest : public Request {
 public:
  DeleteWatchRequest() {}
  virtual ~DeleteWatchRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgDeleteWatchRequest* mutable_request() { return &request_msg_; }
  const MsgDeleteWatchRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_DELETE_WATCH_REQUEST; }
 private:
  DeleteWatchRequest(DeleteWatchRequest&);
  void operator=(DeleteWatchRequest&);

  MsgDeleteWatchRequest  request_msg_;
};

class HandleRootRemoveRequest : public Request {
 public:
  HandleRootRemoveRequest() {}
  virtual ~HandleRootRemoveRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_HANDLE_ROOT_REMOVE_REQUEST; }
 private:
  HandleRootRemoveRequest(HandleRootRemoveRequest&);
  void operator=(HandleRootRemoveRequest&);
};

class RefreshEnableRequest : public Request {
 public:
  RefreshEnableRequest() {}
  virtual ~RefreshEnableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgRefreshEnableRequest* mutable_request() { return &request_msg_; }
  const MsgRefreshEnableRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_REFRESH_ENABLE_REQUEST; }
 private:
  RefreshEnableRequest(RefreshEnableRequest&);
  void operator=(RefreshEnableRequest&);

  MsgRefreshEnableRequest  request_msg_;
};

class RefreshDisableRequest : public Request {
 public:
  RefreshDisableRequest() {}
  virtual ~RefreshDisableRequest() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &request_msg_; }
  MsgRefreshDisableRequest* mutable_request() { return &request_msg_; }
  const MsgRefreshDisableRequest& request() const { return request_msg_; }
  virtual MsgCode msg_code() const { return MC_REFRESH_DISABLE_REQUEST; }
 private:
  RefreshDisableRequest(RefreshDisableRequest&);
  void operator=(RefreshDisableRequest&);

  MsgRefreshDisableRequest  request_msg_;
};

/* End of Generated by shell script */

}  // namespace zs

#endif  // ZISYNC_KERNEL_UTILS_REQUEST_H_
