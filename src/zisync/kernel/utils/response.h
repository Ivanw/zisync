// Copyright 2014, zisync.com

#ifndef ZISYNC_KERNEL_UTILS_RESPONSE_H_
#define ZISYNC_KERNEL_UTILS_RESPONSE_H_

#ifdef _MSC_VER
  #pragma warning( push )
  #pragma warning( disable : 4244)
  #pragma warning( disable : 4267)
  #include <google/protobuf/message.h>
  #include "zisync/kernel/proto/kernel.pb.h"
  #pragma warning( pop )
#else
  #include <google/protobuf/message.h>
  #include "zisync/kernel/proto/kernel.pb.h"
#endif

#include "zisync/kernel/utils/message.h"
#include "zisync_kernel.h"  // NOLINT

namespace zs {

class Response : public Message {
 public:
  virtual ~Response() {};
  virtual ::google::protobuf::Message* mutable_msg() = 0;
  virtual MsgCode msg_code() const = 0;
};

/* Generated by shell script */
class FindResponse : public Response {
 public:
  FindResponse() {}
  virtual ~FindResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgFindResponse* mutable_response() { return &response_msg_; }
  const MsgFindResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_FIND_RESPONSE; }
 private:
  FindResponse(FindResponse&);
 void operator=(FindResponse&);

  MsgFindResponse  response_msg_;
};

class DeviceInfoResponse : public Response {
 public:
  DeviceInfoResponse() {}
  virtual ~DeviceInfoResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgDeviceInfoResponse* mutable_response() { return &response_msg_; }
  const MsgDeviceInfoResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_DEVICE_INFO_RESPONSE; }
 private:
  DeviceInfoResponse(DeviceInfoResponse&);
 void operator=(DeviceInfoResponse&);

  MsgDeviceInfoResponse  response_msg_;
};

class PushDeviceInfoResponse : public Response {
 public:
  PushDeviceInfoResponse() {}
  virtual ~PushDeviceInfoResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_PUSH_DEVICE_INFO_RESPONSE; }
 private:
  PushDeviceInfoResponse(PushDeviceInfoResponse&);
 void operator=(PushDeviceInfoResponse&);
};

class AnnounceTokenChangedResponse : public Response {
 public:
  AnnounceTokenChangedResponse() {}
  virtual ~AnnounceTokenChangedResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ANNOUNCE_TOKEN_CHANGED_RESPONSE; }
 private:
  AnnounceTokenChangedResponse(AnnounceTokenChangedResponse&);
 void operator=(AnnounceTokenChangedResponse&);
};

class AnnounceExitResponse : public Response {
 public:
  AnnounceExitResponse() {}
  virtual ~AnnounceExitResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ANNOUNCE_EXIT_RESPONSE; }
 private:
  AnnounceExitResponse(AnnounceExitResponse&);
 void operator=(AnnounceExitResponse&);
};

class FilterPushSyncMetaResponse : public Response {
 public:
  FilterPushSyncMetaResponse() {}
  virtual ~FilterPushSyncMetaResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgFilterPushSyncMetaResponse* mutable_response() { return &response_msg_; }
  const MsgFilterPushSyncMetaResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_FILTER_PUSH_SYNC_META_RESPONSE; }
 private:
  FilterPushSyncMetaResponse(FilterPushSyncMetaResponse&);
 void operator=(FilterPushSyncMetaResponse&);

  MsgFilterPushSyncMetaResponse  response_msg_;
};

class DeviceMetaResponse : public Response {
 public:
  DeviceMetaResponse() {}
  virtual ~DeviceMetaResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgDeviceMetaResponse* mutable_response() { return &response_msg_; }
  const MsgDeviceMetaResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_DEVICE_META_RESPONSE; }
 private:
  DeviceMetaResponse(DeviceMetaResponse&);
 void operator=(DeviceMetaResponse&);

  MsgDeviceMetaResponse  response_msg_;
};

class ShareSyncResponse : public Response {
 public:
  ShareSyncResponse() {}
  virtual ~ShareSyncResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgShareSyncResponse* mutable_response() { return &response_msg_; }
  const MsgShareSyncResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_SHARE_SYNC_RESPONSE; }
 private:
  ShareSyncResponse(ShareSyncResponse&);
 void operator=(ShareSyncResponse&);

  MsgShareSyncResponse  response_msg_;
};

class FindFileResponse : public Response {
 public:
  FindFileResponse() {}
  virtual ~FindFileResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgFindFileResponse* mutable_response() { return &response_msg_; }
  const MsgFindFileResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_FIND_FILE_RESPONSE; }
 private:
  FindFileResponse(FindFileResponse&);
 void operator=(FindFileResponse&);

  MsgFindFileResponse  response_msg_;
};

class PushBackupInfoResponse : public Response {
 public:
  PushBackupInfoResponse() {}
  virtual ~PushBackupInfoResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgPushBackupInfoResponse* mutable_response() { return &response_msg_; }
  const MsgPushBackupInfoResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_PUSH_BACKUP_INFO_RESPONSE; }
 private:
  PushBackupInfoResponse(PushBackupInfoResponse&);
 void operator=(PushBackupInfoResponse&);

  MsgPushBackupInfoResponse  response_msg_;
};

class RemoveRemoteFileResponse : public Response {
 public:
  RemoveRemoteFileResponse() {}
  virtual ~RemoveRemoteFileResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgRemoveRemoteFileResponse* mutable_response() { return &response_msg_; }
  const MsgRemoveRemoteFileResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_REMOVE_REMOTE_FILE_RESPONSE; }
 private:
  RemoveRemoteFileResponse(RemoveRemoteFileResponse&);
 void operator=(RemoveRemoteFileResponse&);

  MsgRemoveRemoteFileResponse  response_msg_;
};

class RefreshResponse : public Response {
 public:
  RefreshResponse() {}
  virtual ~RefreshResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgRefreshResponse* mutable_response() { return &response_msg_; }
  const MsgRefreshResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_REFRESH_RESPONSE; }
 private:
  RefreshResponse(RefreshResponse&);
 void operator=(RefreshResponse&);

  MsgRefreshResponse  response_msg_;
};

class SyncResponse : public Response {
 public:
  SyncResponse() {}
  virtual ~SyncResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgSyncResponse* mutable_response() { return &response_msg_; }
  const MsgSyncResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_SYNC_RESPONSE; }
 private:
  SyncResponse(SyncResponse&);
 void operator=(SyncResponse&);

  MsgSyncResponse  response_msg_;
};

class SetRoutePortResponse : public Response {
 public:
  SetRoutePortResponse() {}
  virtual ~SetRoutePortResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SET_ROUTE_PORT_RESPONSE; }
 private:
  SetRoutePortResponse(SetRoutePortResponse&);
 void operator=(SetRoutePortResponse&);
};

class SetDiscoverPortResponse : public Response {
 public:
  SetDiscoverPortResponse() {}
  virtual ~SetDiscoverPortResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SET_DISCOVER_PORT_RESPONSE; }
 private:
  SetDiscoverPortResponse(SetDiscoverPortResponse&);
 void operator=(SetDiscoverPortResponse&);
};

class DiscoverPeerEraseResponse : public Response {
 public:
  DiscoverPeerEraseResponse() {}
  virtual ~DiscoverPeerEraseResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DISCOVER_PEER_ERASE_RESPONSE; }
 private:
  DiscoverPeerEraseResponse(DiscoverPeerEraseResponse&);
 void operator=(DiscoverPeerEraseResponse&);
};

class MonitorWatchAddResponse : public Response {
 public:
  MonitorWatchAddResponse() {}
  virtual ~MonitorWatchAddResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_MONITOR_WATCH_ADD_RESPONSE; }
 private:
  MonitorWatchAddResponse(MonitorWatchAddResponse&);
 void operator=(MonitorWatchAddResponse&);
};

class MonitorWatchDelResponse : public Response {
 public:
  MonitorWatchDelResponse() {}
  virtual ~MonitorWatchDelResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_MONITOR_WATCH_DEL_RESPONSE; }
 private:
  MonitorWatchDelResponse(MonitorWatchDelResponse&);
 void operator=(MonitorWatchDelResponse&);
};

class MonitorReportEventResponse : public Response {
 public:
  MonitorReportEventResponse() {}
  virtual ~MonitorReportEventResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_MONITOR_REPORT_EVENT_RESPONSE; }
 private:
  MonitorReportEventResponse(MonitorReportEventResponse&);
 void operator=(MonitorReportEventResponse&);
};

class DhtAnnounceResponse : public Response {
 public:
  DhtAnnounceResponse() {}
  virtual ~DhtAnnounceResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DHT_ANNOUNCE_RESPONSE; }
 private:
  DhtAnnounceResponse(DhtAnnounceResponse&);
 void operator=(DhtAnnounceResponse&);
};

class BroadcastResponse : public Response {
 public:
  BroadcastResponse() {}
  virtual ~BroadcastResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_BROADCAST_RESPONSE; }
 private:
  BroadcastResponse(BroadcastResponse&);
 void operator=(BroadcastResponse&);
};

class CheckPeerExpiredResponse : public Response {
 public:
  CheckPeerExpiredResponse() {}
  virtual ~CheckPeerExpiredResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_CHECK_PEER_EXPIRED_RESPONSE; }
 private:
  CheckPeerExpiredResponse(CheckPeerExpiredResponse&);
 void operator=(CheckPeerExpiredResponse&);
};

class IssueTokenChangedResponse : public Response {
 public:
  IssueTokenChangedResponse() {}
  virtual ~IssueTokenChangedResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ISSUE_TOKEN_CHANGED_RESPONSE; }
 private:
  IssueTokenChangedResponse(IssueTokenChangedResponse&);
 void operator=(IssueTokenChangedResponse&);
};

class IssueDeviceInfoResponse : public Response {
 public:
  IssueDeviceInfoResponse() {}
  virtual ~IssueDeviceInfoResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ISSUE_DEVICE_INFO_RESPONSE; }
 private:
  IssueDeviceInfoResponse(IssueDeviceInfoResponse&);
 void operator=(IssueDeviceInfoResponse&);
};

class IssuePushDeviceInfoResponse : public Response {
 public:
  IssuePushDeviceInfoResponse() {}
  virtual ~IssuePushDeviceInfoResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ISSUE_PUSH_DEVICE_INFO_RESPONSE; }
 private:
  IssuePushDeviceInfoResponse(IssuePushDeviceInfoResponse&);
 void operator=(IssuePushDeviceInfoResponse&);
};

class IssuePushDeviceMetaResponse : public Response {
 public:
  IssuePushDeviceMetaResponse() {}
  virtual ~IssuePushDeviceMetaResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ISSUE_PUSH_DEVICE_META_RESPONSE; }
 private:
  IssuePushDeviceMetaResponse(IssuePushDeviceMetaResponse&);
 void operator=(IssuePushDeviceMetaResponse&);
};

class IssuePushSyncInfoResponse : public Response {
 public:
  IssuePushSyncInfoResponse() {}
  virtual ~IssuePushSyncInfoResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ISSUE_PUSH_SYNC_INFO_RESPONSE; }
 private:
  IssuePushSyncInfoResponse(IssuePushSyncInfoResponse&);
 void operator=(IssuePushSyncInfoResponse&);
};

class IssuePushTreeInfoResponse : public Response {
 public:
  IssuePushTreeInfoResponse() {}
  virtual ~IssuePushTreeInfoResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ISSUE_PUSH_TREE_INFO_RESPONSE; }
 private:
  IssuePushTreeInfoResponse(IssuePushTreeInfoResponse&);
 void operator=(IssuePushTreeInfoResponse&);
};

class ReportDataResponse : public Response {
 public:
  ReportDataResponse() {}
  virtual ~ReportDataResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_REPORT_DATA_RESPONSE; }
 private:
  ReportDataResponse(ReportDataResponse&);
 void operator=(ReportDataResponse&);
};

class ReportUiMonitorResponse : public Response {
 public:
  ReportUiMonitorResponse() {}
  virtual ~ReportUiMonitorResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_REPORT_UI_MONITOR_RESPONSE; }
 private:
  ReportUiMonitorResponse(ReportUiMonitorResponse&);
 void operator=(ReportUiMonitorResponse&);
};

class RouteStartupResponse : public Response {
 public:
  RouteStartupResponse() {}
  virtual ~RouteStartupResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ROUTE_STARTUP_RESPONSE; }
 private:
  RouteStartupResponse(RouteStartupResponse&);
 void operator=(RouteStartupResponse&);
};

class RouteShutdownResponse : public Response {
 public:
  RouteShutdownResponse() {}
  virtual ~RouteShutdownResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ROUTE_SHUTDOWN_RESPONSE; }
 private:
  RouteShutdownResponse(RouteShutdownResponse&);
 void operator=(RouteShutdownResponse&);
};

class DiscoverSetBackgroundResponse : public Response {
 public:
  DiscoverSetBackgroundResponse() {}
  virtual ~DiscoverSetBackgroundResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DISCOVER_SET_BACKGROUND_RESPONSE; }
 private:
  DiscoverSetBackgroundResponse(DiscoverSetBackgroundResponse&);
 void operator=(DiscoverSetBackgroundResponse&);
};

class DiscoverSetForegroundResponse : public Response {
 public:
  DiscoverSetForegroundResponse() {}
  virtual ~DiscoverSetForegroundResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DISCOVER_SET_FOREGROUND_RESPONSE; }
 private:
  DiscoverSetForegroundResponse(DiscoverSetForegroundResponse&);
 void operator=(DiscoverSetForegroundResponse&);
};

class QueryCacheUpdateResponse : public Response {
 public:
  QueryCacheUpdateResponse() {}
  virtual ~QueryCacheUpdateResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_QUERY_CACHE_UPDATE_RESPONSE; }
 private:
  QueryCacheUpdateResponse(QueryCacheUpdateResponse&);
 void operator=(QueryCacheUpdateResponse&);
};

class UpdateAllTreePairStatusResponse : public Response {
 public:
  UpdateAllTreePairStatusResponse() {}
  virtual ~UpdateAllTreePairStatusResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_UPDATE_ALL_TREE_PAIR_STATUS_RESPONSE; }
 private:
  UpdateAllTreePairStatusResponse(UpdateAllTreePairStatusResponse&);
 void operator=(UpdateAllTreePairStatusResponse&);
};

class DeviceAddResponse : public Response {
 public:
  DeviceAddResponse() {}
  virtual ~DeviceAddResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DEVICE_ADD_RESPONSE; }
 private:
  DeviceAddResponse(DeviceAddResponse&);
 void operator=(DeviceAddResponse&);
};

class RemoteDeviceShowResponse : public Response {
 public:
  RemoteDeviceShowResponse() {}
  virtual ~RemoteDeviceShowResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgRemoteDeviceShowResponse* mutable_response() { return &response_msg_; }
  const MsgRemoteDeviceShowResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_REMOTE_DEVICE_SHOW_RESPONSE; }
 private:
  RemoteDeviceShowResponse(RemoteDeviceShowResponse&);
 void operator=(RemoteDeviceShowResponse&);

  MsgRemoteDeviceShowResponse  response_msg_;
};

class DatabaseInitResponse : public Response {
 public:
  DatabaseInitResponse() {}
  virtual ~DatabaseInitResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DATABASE_INIT_RESPONSE; }
 private:
  DatabaseInitResponse(DatabaseInitResponse&);
 void operator=(DatabaseInitResponse&);
};

class MonitorEnableResponse : public Response {
 public:
  MonitorEnableResponse() {}
  virtual ~MonitorEnableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_MONITOR_ENABLE_RESPONSE; }
 private:
  MonitorEnableResponse(MonitorEnableResponse&);
 void operator=(MonitorEnableResponse&);
};

class MonitorDisableResponse : public Response {
 public:
  MonitorDisableResponse() {}
  virtual ~MonitorDisableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_MONITOR_DISABLE_RESPONSE; }
 private:
  MonitorDisableResponse(MonitorDisableResponse&);
 void operator=(MonitorDisableResponse&);
};

class SyncAddResponse : public Response {
 public:
  SyncAddResponse() {}
  virtual ~SyncAddResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgSyncAddResponse* mutable_response() { return &response_msg_; }
  const MsgSyncAddResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_SYNC_ADD_RESPONSE; }
 private:
  SyncAddResponse(SyncAddResponse&);
 void operator=(SyncAddResponse&);

  MsgSyncAddResponse  response_msg_;
};

class SyncDelResponse : public Response {
 public:
  SyncDelResponse() {}
  virtual ~SyncDelResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SYNC_DEL_RESPONSE; }
 private:
  SyncDelResponse(SyncDelResponse&);
 void operator=(SyncDelResponse&);
};

class SyncQueryResponse : public Response {
 public:
  SyncQueryResponse() {}
  virtual ~SyncQueryResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgSyncQueryResponse* mutable_response() { return &response_msg_; }
  const MsgSyncQueryResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_SYNC_QUERY_RESPONSE; }
 private:
  SyncQueryResponse(SyncQueryResponse&);
 void operator=(SyncQueryResponse&);

  MsgSyncQueryResponse  response_msg_;
};

class TreeAddResponse : public Response {
 public:
  TreeAddResponse() {}
  virtual ~TreeAddResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgTreeAddResponse* mutable_response() { return &response_msg_; }
  const MsgTreeAddResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_TREE_ADD_RESPONSE; }
 private:
  TreeAddResponse(TreeAddResponse&);
 void operator=(TreeAddResponse&);

  MsgTreeAddResponse  response_msg_;
};

class TreeDelResponse : public Response {
 public:
  TreeDelResponse() {}
  virtual ~TreeDelResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_TREE_DEL_RESPONSE; }
 private:
  TreeDelResponse(TreeDelResponse&);
 void operator=(TreeDelResponse&);
};

class RemoteTreeAddResponse : public Response {
 public:
  RemoteTreeAddResponse() {}
  virtual ~RemoteTreeAddResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgRemoteTreeAddResponse* mutable_response() { return &response_msg_; }
  const MsgRemoteTreeAddResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_REMOTE_TREE_ADD_RESPONSE; }
 private:
  RemoteTreeAddResponse(RemoteTreeAddResponse&);
 void operator=(RemoteTreeAddResponse&);

  MsgRemoteTreeAddResponse  response_msg_;
};

class TreeShowResponse : public Response {
 public:
  TreeShowResponse() {}
  virtual ~TreeShowResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgTreeShowResponse* mutable_response() { return &response_msg_; }
  const MsgTreeShowResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_TREE_SHOW_RESPONSE; }
 private:
  TreeShowResponse(TreeShowResponse&);
 void operator=(TreeShowResponse&);

  MsgTreeShowResponse  response_msg_;
};

class AddFavoriteResponse : public Response {
 public:
  AddFavoriteResponse() {}
  virtual ~AddFavoriteResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ADD_FAVORITE_RESPONSE; }
 private:
  AddFavoriteResponse(AddFavoriteResponse&);
 void operator=(AddFavoriteResponse&);
};

class TestFindResponse : public Response {
 public:
  TestFindResponse() {}
  virtual ~TestFindResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgTestFindResponse* mutable_response() { return &response_msg_; }
  const MsgTestFindResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_TEST_FIND_RESPONSE; }
 private:
  TestFindResponse(TestFindResponse&);
 void operator=(TestFindResponse&);

  MsgTestFindResponse  response_msg_;
};

class ListSyncResponse : public Response {
 public:
  ListSyncResponse() {}
  virtual ~ListSyncResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgListSyncResponse* mutable_response() { return &response_msg_; }
  const MsgListSyncResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_LIST_SYNC_RESPONSE; }
 private:
  ListSyncResponse(ListSyncResponse&);
 void operator=(ListSyncResponse&);

  MsgListSyncResponse  response_msg_;
};

class DhtAnnounceEnableResponse : public Response {
 public:
  DhtAnnounceEnableResponse() {}
  virtual ~DhtAnnounceEnableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DHT_ANNOUNCE_ENABLE_RESPONSE; }
 private:
  DhtAnnounceEnableResponse(DhtAnnounceEnableResponse&);
 void operator=(DhtAnnounceEnableResponse&);
};

class DhtAnnounceDisableResponse : public Response {
 public:
  DhtAnnounceDisableResponse() {}
  virtual ~DhtAnnounceDisableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DHT_ANNOUNCE_DISABLE_RESPONSE; }
 private:
  DhtAnnounceDisableResponse(DhtAnnounceDisableResponse&);
 void operator=(DhtAnnounceDisableResponse&);
};

class BroadcastEnableResponse : public Response {
 public:
  BroadcastEnableResponse() {}
  virtual ~BroadcastEnableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_BROADCAST_ENABLE_RESPONSE; }
 private:
  BroadcastEnableResponse(BroadcastEnableResponse&);
 void operator=(BroadcastEnableResponse&);
};

class BroadcastDisableResponse : public Response {
 public:
  BroadcastDisableResponse() {}
  virtual ~BroadcastDisableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_BROADCAST_DISABLE_RESPONSE; }
 private:
  BroadcastDisableResponse(BroadcastDisableResponse&);
 void operator=(BroadcastDisableResponse&);
};

class AutoSyncEnableResponse : public Response {
 public:
  AutoSyncEnableResponse() {}
  virtual ~AutoSyncEnableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_AUTO_SYNC_ENABLE_RESPONSE; }
 private:
  AutoSyncEnableResponse(AutoSyncEnableResponse&);
 void operator=(AutoSyncEnableResponse&);
};

class AutoSyncDisableResponse : public Response {
 public:
  AutoSyncDisableResponse() {}
  virtual ~AutoSyncDisableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_AUTO_SYNC_DISABLE_RESPONSE; }
 private:
  AutoSyncDisableResponse(AutoSyncDisableResponse&);
 void operator=(AutoSyncDisableResponse&);
};

class SetAccountResponse : public Response {
 public:
  SetAccountResponse() {}
  virtual ~SetAccountResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SET_ACCOUNT_RESPONSE; }
 private:
  SetAccountResponse(SetAccountResponse&);
 void operator=(SetAccountResponse&);
};

class SyncShowResponse : public Response {
 public:
  SyncShowResponse() {}
  virtual ~SyncShowResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgSyncShowResponse* mutable_response() { return &response_msg_; }
  const MsgSyncShowResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_SYNC_SHOW_RESPONSE; }
 private:
  SyncShowResponse(SyncShowResponse&);
 void operator=(SyncShowResponse&);

  MsgSyncShowResponse  response_msg_;
};

class DiscoverCacheClearResponse : public Response {
 public:
  DiscoverCacheClearResponse() {}
  virtual ~DiscoverCacheClearResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DISCOVER_CACHE_CLEAR_RESPONSE; }
 private:
  DiscoverCacheClearResponse(DiscoverCacheClearResponse&);
 void operator=(DiscoverCacheClearResponse&);
};

class DeviceInfoEnableResponse : public Response {
 public:
  DeviceInfoEnableResponse() {}
  virtual ~DeviceInfoEnableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DEVICE_INFO_ENABLE_RESPONSE; }
 private:
  DeviceInfoEnableResponse(DeviceInfoEnableResponse&);
 void operator=(DeviceInfoEnableResponse&);
};

class DeviceInfoDisableResponse : public Response {
 public:
  DeviceInfoDisableResponse() {}
  virtual ~DeviceInfoDisableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DEVICE_INFO_DISABLE_RESPONSE; }
 private:
  DeviceInfoDisableResponse(DeviceInfoDisableResponse&);
 void operator=(DeviceInfoDisableResponse&);
};

class PushDeviceInfoEnableResponse : public Response {
 public:
  PushDeviceInfoEnableResponse() {}
  virtual ~PushDeviceInfoEnableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_PUSH_DEVICE_INFO_ENABLE_RESPONSE; }
 private:
  PushDeviceInfoEnableResponse(PushDeviceInfoEnableResponse&);
 void operator=(PushDeviceInfoEnableResponse&);
};

class PushDeviceInfoDisableResponse : public Response {
 public:
  PushDeviceInfoDisableResponse() {}
  virtual ~PushDeviceInfoDisableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_PUSH_DEVICE_INFO_DISABLE_RESPONSE; }
 private:
  PushDeviceInfoDisableResponse(PushDeviceInfoDisableResponse&);
 void operator=(PushDeviceInfoDisableResponse&);
};

class StartupDiscoverDeviceResponse : public Response {
 public:
  StartupDiscoverDeviceResponse() {}
  virtual ~StartupDiscoverDeviceResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgStartupDiscoverDeviceResponse* mutable_response() { return &response_msg_; }
  const MsgStartupDiscoverDeviceResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_STARTUP_DISCOVER_DEVICE_RESPONSE; }
 private:
  StartupDiscoverDeviceResponse(StartupDiscoverDeviceResponse&);
 void operator=(StartupDiscoverDeviceResponse&);

  MsgStartupDiscoverDeviceResponse  response_msg_;
};

class ShutdownDiscoverDeviceResponse : public Response {
 public:
  ShutdownDiscoverDeviceResponse() {}
  virtual ~ShutdownDiscoverDeviceResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SHUTDOWN_DISCOVER_DEVICE_RESPONSE; }
 private:
  ShutdownDiscoverDeviceResponse(ShutdownDiscoverDeviceResponse&);
 void operator=(ShutdownDiscoverDeviceResponse&);
};

class GetDiscoveredDeviceResponse : public Response {
 public:
  GetDiscoveredDeviceResponse() {}
  virtual ~GetDiscoveredDeviceResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgGetDiscoveredDeviceResponse* mutable_response() { return &response_msg_; }
  const MsgGetDiscoveredDeviceResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_GET_DISCOVERED_DEVICE_RESPONSE; }
 private:
  GetDiscoveredDeviceResponse(GetDiscoveredDeviceResponse&);
 void operator=(GetDiscoveredDeviceResponse&);

  MsgGetDiscoveredDeviceResponse  response_msg_;
};

class TestShareSyncResponse : public Response {
 public:
  TestShareSyncResponse() {}
  virtual ~TestShareSyncResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_TEST_SHARE_SYNC_RESPONSE; }
 private:
  TestShareSyncResponse(TestShareSyncResponse&);
 void operator=(TestShareSyncResponse&);
};

class StartupDownloadResponse : public Response {
 public:
  StartupDownloadResponse() {}
  virtual ~StartupDownloadResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgStartupDownloadResponse* mutable_response() { return &response_msg_; }
  const MsgStartupDownloadResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_STARTUP_DOWNLOAD_RESPONSE; }
 private:
  StartupDownloadResponse(StartupDownloadResponse&);
 void operator=(StartupDownloadResponse&);

  MsgStartupDownloadResponse  response_msg_;
};

class ShutdownDownloadResponse : public Response {
 public:
  ShutdownDownloadResponse() {}
  virtual ~ShutdownDownloadResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SHUTDOWN_DOWNLOAD_RESPONSE; }
 private:
  ShutdownDownloadResponse(ShutdownDownloadResponse&);
 void operator=(ShutdownDownloadResponse&);
};

class BackupAddResponse : public Response {
 public:
  BackupAddResponse() {}
  virtual ~BackupAddResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgBackupAddResponse* mutable_response() { return &response_msg_; }
  const MsgBackupAddResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_BACKUP_ADD_RESPONSE; }
 private:
  BackupAddResponse(BackupAddResponse&);
 void operator=(BackupAddResponse&);

  MsgBackupAddResponse  response_msg_;
};

class BackupDelResponse : public Response {
 public:
  BackupDelResponse() {}
  virtual ~BackupDelResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_BACKUP_DEL_RESPONSE; }
 private:
  BackupDelResponse(BackupDelResponse&);
 void operator=(BackupDelResponse&);
};

class BackupShowResponse : public Response {
 public:
  BackupShowResponse() {}
  virtual ~BackupShowResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgBackupShowResponse* mutable_response() { return &response_msg_; }
  const MsgBackupShowResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_BACKUP_SHOW_RESPONSE; }
 private:
  BackupShowResponse(BackupShowResponse&);
 void operator=(BackupShowResponse&);

  MsgBackupShowResponse  response_msg_;
};

class AddBackupTargetDeviceResponse : public Response {
 public:
  AddBackupTargetDeviceResponse() {}
  virtual ~AddBackupTargetDeviceResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ADD_BACKUP_TARGET_DEVICE_RESPONSE; }
 private:
  AddBackupTargetDeviceResponse(AddBackupTargetDeviceResponse&);
 void operator=(AddBackupTargetDeviceResponse&);
};

class DelBackupTargetDeviceResponse : public Response {
 public:
  DelBackupTargetDeviceResponse() {}
  virtual ~DelBackupTargetDeviceResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DEL_BACKUP_TARGET_DEVICE_RESPONSE; }
 private:
  DelBackupTargetDeviceResponse(DelBackupTargetDeviceResponse&);
 void operator=(DelBackupTargetDeviceResponse&);
};

class SetBackupRootResponse : public Response {
 public:
  SetBackupRootResponse() {}
  virtual ~SetBackupRootResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SET_BACKUP_ROOT_RESPONSE; }
 private:
  SetBackupRootResponse(SetBackupRootResponse&);
 void operator=(SetBackupRootResponse&);
};

class SetTestPlatformResponse : public Response {
 public:
  SetTestPlatformResponse() {}
  virtual ~SetTestPlatformResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SET_TEST_PLATFORM_RESPONSE; }
 private:
  SetTestPlatformResponse(SetTestPlatformResponse&);
 void operator=(SetTestPlatformResponse&);
};

class ClearTestPlatformResponse : public Response {
 public:
  ClearTestPlatformResponse() {}
  virtual ~ClearTestPlatformResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_CLEAR_TEST_PLATFORM_RESPONSE; }
 private:
  ClearTestPlatformResponse(ClearTestPlatformResponse&);
 void operator=(ClearTestPlatformResponse&);
};

class SetSyncModeResponse : public Response {
 public:
  SetSyncModeResponse() {}
  virtual ~SetSyncModeResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SET_SYNC_MODE_RESPONSE; }
 private:
  SetSyncModeResponse(SetSyncModeResponse&);
 void operator=(SetSyncModeResponse&);
};

class GetSyncModeResponse : public Response {
 public:
  GetSyncModeResponse() {}
  virtual ~GetSyncModeResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgGetSyncModeResponse* mutable_response() { return &response_msg_; }
  const MsgGetSyncModeResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_GET_SYNC_MODE_RESPONSE; }
 private:
  GetSyncModeResponse(GetSyncModeResponse&);
 void operator=(GetSyncModeResponse&);

  MsgGetSyncModeResponse  response_msg_;
};

class QueryTreePairStatusResponse : public Response {
 public:
  QueryTreePairStatusResponse() {}
  virtual ~QueryTreePairStatusResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgQueryTreePairStatusResponse* mutable_response() { return &response_msg_; }
  const MsgQueryTreePairStatusResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_TREE_PAIR_STATUS_RESPONSE; }
 private:
  QueryTreePairStatusResponse(QueryTreePairStatusResponse&);
 void operator=(QueryTreePairStatusResponse&);

  MsgQueryTreePairStatusResponse  response_msg_;
};

class SetTreeRootResponse : public Response {
 public:
  SetTreeRootResponse() {}
  virtual ~SetTreeRootResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SET_TREE_ROOT_RESPONSE; }
 private:
  SetTreeRootResponse(SetTreeRootResponse&);
 void operator=(SetTreeRootResponse&);
};

class DelBackupTargetResponse : public Response {
 public:
  DelBackupTargetResponse() {}
  virtual ~DelBackupTargetResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_DEL_BACKUP_TARGET_RESPONSE; }
 private:
  DelBackupTargetResponse(DelBackupTargetResponse&);
 void operator=(DelBackupTargetResponse&);
};

class SetShareSyncPermResponse : public Response {
 public:
  SetShareSyncPermResponse() {}
  virtual ~SetShareSyncPermResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SET_SHARE_SYNC_PERM_RESPONSE; }
 private:
  SetShareSyncPermResponse(SetShareSyncPermResponse&);
 void operator=(SetShareSyncPermResponse&);
};

class GetShareSyncPermResponse : public Response {
 public:
  GetShareSyncPermResponse() {}
  virtual ~GetShareSyncPermResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgGetShareSyncPermResponse* mutable_response() { return &response_msg_; }
  const MsgGetShareSyncPermResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_GET_SHARE_SYNC_PERM_RESPONSE; }
 private:
  GetShareSyncPermResponse(GetShareSyncPermResponse&);
 void operator=(GetShareSyncPermResponse&);

  MsgGetShareSyncPermResponse  response_msg_;
};

class AnnounceTokenChangedEnableResponse : public Response {
 public:
  AnnounceTokenChangedEnableResponse() {}
  virtual ~AnnounceTokenChangedEnableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ANNOUNCE_TOKEN_CHANGED_ENABLE_RESPONSE; }
 private:
  AnnounceTokenChangedEnableResponse(AnnounceTokenChangedEnableResponse&);
 void operator=(AnnounceTokenChangedEnableResponse&);
};

class AnnounceTokenChangedDisableResponse : public Response {
 public:
  AnnounceTokenChangedDisableResponse() {}
  virtual ~AnnounceTokenChangedDisableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_ANNOUNCE_TOKEN_CHANGED_DISABLE_RESPONSE; }
 private:
  AnnounceTokenChangedDisableResponse(AnnounceTokenChangedDisableResponse&);
 void operator=(AnnounceTokenChangedDisableResponse&);
};

class SetDownloadCacheVolumeResponse : public Response {
 public:
  SetDownloadCacheVolumeResponse() {}
  virtual ~SetDownloadCacheVolumeResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SET_DOWNLOAD_CACHE_VOLUME_RESPONSE; }
 private:
  SetDownloadCacheVolumeResponse(SetDownloadCacheVolumeResponse&);
 void operator=(SetDownloadCacheVolumeResponse&);
};

class QueryDownloadStatusResponse : public Response {
 public:
  QueryDownloadStatusResponse() {}
  virtual ~QueryDownloadStatusResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgQueryDownloadStatusResponse* mutable_response() { return &response_msg_; }
  const MsgQueryDownloadStatusResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_DOWNLOAD_STATUS_RESPONSE; }
 private:
  QueryDownloadStatusResponse(QueryDownloadStatusResponse&);
 void operator=(QueryDownloadStatusResponse&);

  MsgQueryDownloadStatusResponse  response_msg_;
};

class StartupUploadResponse : public Response {
 public:
  StartupUploadResponse() {}
  virtual ~StartupUploadResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgStartupUploadResponse* mutable_response() { return &response_msg_; }
  const MsgStartupUploadResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_STARTUP_UPLOAD_RESPONSE; }
 private:
  StartupUploadResponse(StartupUploadResponse&);
 void operator=(StartupUploadResponse&);

  MsgStartupUploadResponse  response_msg_;
};

class ShutdownUploadResponse : public Response {
 public:
  ShutdownUploadResponse() {}
  virtual ~ShutdownUploadResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_SHUTDOWN_UPLOAD_RESPONSE; }
 private:
  ShutdownUploadResponse(ShutdownUploadResponse&);
 void operator=(ShutdownUploadResponse&);
};

class QueryUploadStatusResponse : public Response {
 public:
  QueryUploadStatusResponse() {}
  virtual ~QueryUploadStatusResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgQueryUploadStatusResponse* mutable_response() { return &response_msg_; }
  const MsgQueryUploadStatusResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_UPLOAD_STATUS_RESPONSE; }
 private:
  QueryUploadStatusResponse(QueryUploadStatusResponse&);
 void operator=(QueryUploadStatusResponse&);

  MsgQueryUploadStatusResponse  response_msg_;
};

class GetDownloadCacheAmountResponse : public Response {
 public:
  GetDownloadCacheAmountResponse() {}
  virtual ~GetDownloadCacheAmountResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgGetDownloadCacheAmountResponse* mutable_response() { return &response_msg_; }
  const MsgGetDownloadCacheAmountResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_GET_DOWNLOAD_CACHE_AMOUNT_RESPONSE; }
 private:
  GetDownloadCacheAmountResponse(GetDownloadCacheAmountResponse&);
 void operator=(GetDownloadCacheAmountResponse&);

  MsgGetDownloadCacheAmountResponse  response_msg_;
};

class GetDownloadCacheRootResponse : public Response {
 public:
  GetDownloadCacheRootResponse() {}
  virtual ~GetDownloadCacheRootResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgGetDownloadCacheRootResponse* mutable_response() { return &response_msg_; }
  const MsgGetDownloadCacheRootResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_GET_DOWNLOAD_CACHE_ROOT_RESPONSE; }
 private:
  GetDownloadCacheRootResponse(GetDownloadCacheRootResponse&);
 void operator=(GetDownloadCacheRootResponse&);

  MsgGetDownloadCacheRootResponse  response_msg_;
};

class CleanUpDownloadCacheResponse : public Response {
 public:
  CleanUpDownloadCacheResponse() {}
  virtual ~CleanUpDownloadCacheResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_CLEAN_UP_DOWNLOAD_CACHE_RESPONSE; }
 private:
  CleanUpDownloadCacheResponse(CleanUpDownloadCacheResponse&);
 void operator=(CleanUpDownloadCacheResponse&);
};

class QueryHistoryInfoResponse : public Response {
 public:
  QueryHistoryInfoResponse() {}
  virtual ~QueryHistoryInfoResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgQueryHistoryInfoResponse* mutable_response() { return &response_msg_; }
  const MsgQueryHistoryInfoResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_HISTORY_INFO_RESPONSE; }
 private:
  QueryHistoryInfoResponse(QueryHistoryInfoResponse&);
 void operator=(QueryHistoryInfoResponse&);

  MsgQueryHistoryInfoResponse  response_msg_;
};

class PermissionVerifyResponse : public Response {
 public:
  PermissionVerifyResponse() {}
  virtual ~PermissionVerifyResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgPermissionVerifyResponse* mutable_response() { return &response_msg_; }
  const MsgPermissionVerifyResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_PERMISSION_VERIFY_RESPONSE; }
 private:
  PermissionVerifyResponse(PermissionVerifyResponse&);
 void operator=(PermissionVerifyResponse&);

  MsgPermissionVerifyResponse  response_msg_;
};

class QueryPermissionsResponse : public Response {
 public:
  QueryPermissionsResponse() {}
  virtual ~QueryPermissionsResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgQueryPermissionsResponse* mutable_response() { return &response_msg_; }
  const MsgQueryPermissionsResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_PERMISSIONS_RESPONSE; }
 private:
  QueryPermissionsResponse(QueryPermissionsResponse&);
 void operator=(QueryPermissionsResponse&);

  MsgQueryPermissionsResponse  response_msg_;
};

class SetMacAddressInDbResponse : public Response {
 public:
  SetMacAddressInDbResponse() {}
  virtual ~SetMacAddressInDbResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgSetMacAddressInDbResponse* mutable_response() { return &response_msg_; }
  const MsgSetMacAddressInDbResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_MAC_ADDRESS_IN_DB_RESPONSE; }
 private:
  SetMacAddressInDbResponse(SetMacAddressInDbResponse&);
 void operator=(SetMacAddressInDbResponse&);

  MsgSetMacAddressInDbResponse  response_msg_;
};

class SetExpiredTimeInDbResponse : public Response {
 public:
  SetExpiredTimeInDbResponse() {}
  virtual ~SetExpiredTimeInDbResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgSetExpiredTimeInDbResponse* mutable_response() { return &response_msg_; }
  const MsgSetExpiredTimeInDbResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_EXPIRED_TIME_IN_DB_RESPONSE; }
 private:
  SetExpiredTimeInDbResponse(SetExpiredTimeInDbResponse&);
 void operator=(SetExpiredTimeInDbResponse&);

  MsgSetExpiredTimeInDbResponse  response_msg_;
};

class ClearPermissionsResponse : public Response {
 public:
  ClearPermissionsResponse() {}
  virtual ~ClearPermissionsResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgClearPermissionsResponse* mutable_response() { return &response_msg_; }
  const MsgClearPermissionsResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_CLEAR_PERMISSIONS_RESPONSE; }
 private:
  ClearPermissionsResponse(ClearPermissionsResponse&);
 void operator=(ClearPermissionsResponse&);

  MsgClearPermissionsResponse  response_msg_;
};

class QueryVerifyStatusResponse : public Response {
 public:
  QueryVerifyStatusResponse() {}
  virtual ~QueryVerifyStatusResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgQueryVerifyStatusResponse* mutable_response() { return &response_msg_; }
  const MsgQueryVerifyStatusResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_VERIFY_STATUS_RESPONSE; }
 private:
  QueryVerifyStatusResponse(QueryVerifyStatusResponse&);
 void operator=(QueryVerifyStatusResponse&);

  MsgQueryVerifyStatusResponse  response_msg_;
};

class QueryVerifyIdentifyInfoResponse : public Response {
 public:
  QueryVerifyIdentifyInfoResponse() {}
  virtual ~QueryVerifyIdentifyInfoResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgQueryVerifyIdentifyInfoResponse* mutable_response() { return &response_msg_; }
  const MsgQueryVerifyIdentifyInfoResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_QUERY_VERIFY_IDENTIFY_INFO_RESPONSE; }
 private:
  QueryVerifyIdentifyInfoResponse(QueryVerifyIdentifyInfoResponse&);
 void operator=(QueryVerifyIdentifyInfoResponse&);

  MsgQueryVerifyIdentifyInfoResponse  response_msg_;
};

class SyncControlerResponse : public Response {
 public:
  SyncControlerResponse() {}
  virtual ~SyncControlerResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgSyncControlerResponse* mutable_response() { return &response_msg_; }
  const MsgSyncControlerResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_SYNC_CONTROLER_RESPONSE; }
 private:
  SyncControlerResponse(SyncControlerResponse&);
 void operator=(SyncControlerResponse&);

  MsgSyncControlerResponse  response_msg_;
};

class VerifyBindResponse : public Response {
 public:
  VerifyBindResponse() {}
  virtual ~VerifyBindResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgVerifyBindResponse* mutable_response() { return &response_msg_; }
  const MsgVerifyBindResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_VERIFY_BIND_RESPONSE; }
 private:
  VerifyBindResponse(VerifyBindResponse&);
 void operator=(VerifyBindResponse&);

  MsgVerifyBindResponse  response_msg_;
};

class VerifyUnbindResponse : public Response {
 public:
  VerifyUnbindResponse() {}
  virtual ~VerifyUnbindResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgVerifyUnbindResponse* mutable_response() { return &response_msg_; }
  const MsgVerifyUnbindResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_VERIFY_UNBIND_RESPONSE; }
 private:
  VerifyUnbindResponse(VerifyUnbindResponse&);
 void operator=(VerifyUnbindResponse&);

  MsgVerifyUnbindResponse  response_msg_;
};

class SetSyncPermResponse : public Response {
 public:
  SetSyncPermResponse() {}
  virtual ~SetSyncPermResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgSetSyncPermResponse* mutable_response() { return &response_msg_; }
  const MsgSetSyncPermResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_SET_SYNC_PERM_RESPONSE; }
 private:
  SetSyncPermResponse(SetSyncPermResponse&);
 void operator=(SetSyncPermResponse&);

  MsgSetSyncPermResponse  response_msg_;
};

class AddStaticPeersResponse : public Response {
 public:
  AddStaticPeersResponse() {}
  virtual ~AddStaticPeersResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgAddStaticPeersResponse* mutable_response() { return &response_msg_; }
  const MsgAddStaticPeersResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_ADD_STATIC_PEERS_RESPONSE; }
 private:
  AddStaticPeersResponse(AddStaticPeersResponse&);
 void operator=(AddStaticPeersResponse&);

  MsgAddStaticPeersResponse  response_msg_;
};

class GetActiveIpResponse : public Response {
 public:
  GetActiveIpResponse() {}
  virtual ~GetActiveIpResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgGetActiveIpResponse* mutable_response() { return &response_msg_; }
  const MsgGetActiveIpResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_GET_ACTIVE_IP_RESPONSE; }
 private:
  GetActiveIpResponse(GetActiveIpResponse&);
 void operator=(GetActiveIpResponse&);

  MsgGetActiveIpResponse  response_msg_;
};

class DeleteWatchResponse : public Response {
 public:
  DeleteWatchResponse() {}
  virtual ~DeleteWatchResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgDeleteWatchResponse* mutable_response() { return &response_msg_; }
  const MsgDeleteWatchResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_DELETE_WATCH_RESPONSE; }
 private:
  DeleteWatchResponse(DeleteWatchResponse&);
 void operator=(DeleteWatchResponse&);

  MsgDeleteWatchResponse  response_msg_;
};

class HandleRootRemoveResponse : public Response {
 public:
  HandleRootRemoveResponse() {}
  virtual ~HandleRootRemoveResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return NULL; }
  virtual MsgCode msg_code() const { return MC_HANDLE_ROOT_REMOVE_RESPONSE; }
 private:
  HandleRootRemoveResponse(HandleRootRemoveResponse&);
 void operator=(HandleRootRemoveResponse&);
};

class RefreshEnableResponse : public Response {
 public:
  RefreshEnableResponse() {}
  virtual ~RefreshEnableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgRefreshEnableResponse* mutable_response() { return &response_msg_; }
  const MsgRefreshEnableResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_REFRESH_ENABLE_RESPONSE; }
 private:
  RefreshEnableResponse(RefreshEnableResponse&);
 void operator=(RefreshEnableResponse&);

  MsgRefreshEnableResponse  response_msg_;
};

class RefreshDisableResponse : public Response {
 public:
  RefreshDisableResponse() {}
  virtual ~RefreshDisableResponse() {}
  virtual ::google::protobuf::Message* mutable_msg() { return &response_msg_; }
  MsgRefreshDisableResponse* mutable_response() { return &response_msg_; }
  const MsgRefreshDisableResponse& response() const { return response_msg_; }
  virtual MsgCode msg_code() const { return MC_REFRESH_DISABLE_RESPONSE; }
 private:
  RefreshDisableResponse(RefreshDisableResponse&);
 void operator=(RefreshDisableResponse&);

  MsgRefreshDisableResponse  response_msg_;
};

/* End of Generated by shell script */

}  // namespace zs

#endif  // ZISYNC_KERNEL_UTILS_RESPONSE_H_

